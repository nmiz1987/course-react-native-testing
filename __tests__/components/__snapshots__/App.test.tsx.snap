// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`General App tests Renders Tab 1 correctly 1`] = `
<View
  accessible={true}
  style={
    {
      "alignItems": "center",
      "flex": 1,
      "padding": 40,
    }
  }
>
  <Image
    accessibilityLabel="logo"
    accessible={true}
    role="img"
    source={
      {
        "uri": "https://galaxies.dev/img/logos/logo--blue.png",
      }
    }
    style={
      {
        "height": 100,
        "width": 200,
      }
    }
  />
  <Text
    style={
      {
        "fontSize": 20,
        "fontWeight": "bold",
      }
    }
    testID="title"
  >
    Galaxies Feed
  </Text>
  <View
    style={
      {
        "backgroundColor": "#9d9d9d",
        "height": 1,
        "marginVertical": 30,
        "width": "80%",
      }
    }
    testID="separator"
  />
  <View
    style={
      {
        "flexDirection": "row",
        "marginHorizontal": 40,
      }
    }
  >
    <TextInput
      onChangeText={[Function]}
      placeholder="Search galaxies"
      style={
        {
          "backgroundColor": "#fff",
          "flex": 1,
          "padding": 10,
        }
      }
      value=""
    />
  </View>
  <View
    style={
      {
        "alignItems": "center",
        "padding": 20,
      }
    }
  >
    <Text
      style={
        {
          "color": "#000",
          "fontSize": 24,
          "fontWeight": "600",
        }
      }
    >
      Stars: 
      0
    </Text>
    <View
      style={
        {
          "flexDirection": "row",
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            [
              {},
            ]
          }
        >
          <Text
            style={
              [
                {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            Add
          </Text>
        </View>
      </View>
      <View
        accessibilityRole="button"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            [
              {},
            ]
          }
        >
          <Text
            style={
              [
                {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            Decrease
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`General App tests Renders Tab 2 correctly 1`] = `
<View
  style={
    {
      "backgroundColor": "#f2f2f2",
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        [
          {},
        ]
      }
    >
      <Text
        style={
          [
            {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Load Products
      </Text>
    </View>
  </View>
  <RCTScrollView
    data={[]}
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    role="list"
    scrollEventThrottle={0.0001}
    stickyHeaderIndices={[]}
    viewabilityConfigCallbackPairs={[]}
  >
    <View />
  </RCTScrollView>
</View>
`;
